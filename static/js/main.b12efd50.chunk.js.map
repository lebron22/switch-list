{"version":3,"sources":["components/Switch.js","components/PanelBody.js","components/Panel.js","components/PanelsList.js","components/Button.js","App.js","index.js"],"names":["Switch","_ref","checked","handleSwitchChange","react_default","a","createElement","className","type","onChange","PanelBody","body","isOpened","articleClass","classNames","panel__article","opened","Panel","post","title","id","components_Switch","components_PanelBody","PanelsList","posts","renderPanels","map","components_Panel","key","Button","text","handleAllPanelsButton","onClick","App","state","showAll","getPosts","_callee","res","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","slice","_ref2","_this","setState","t0","alert","stop","panelId","Object","objectSpread","uncheckedInputs","find","prevState","this","Fragment","components_Button","length","components_PanelsList","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"sRAIeA,EAFA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,mBAAZ,OAAqCC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeC,KAAK,WAAWN,QAASA,EAASO,SAAU,kBAAMN,yBCcvHO,EAbG,SAAAT,GAAwB,IAArBU,EAAqBV,EAArBU,KAAMC,EAAeX,EAAfW,SACjBC,EAAeC,IAAW,CAC5BC,gBAAkB,EAClBC,OAAUJ,IAGd,OACIR,EAAAC,EAAAC,cAAA,WAASC,UAAWM,GAChBT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeI,KCSzBM,EAhBD,SAAAhB,GAAkC,IAA/BiB,EAA+BjB,EAA/BiB,KAAMf,EAAyBF,EAAzBE,mBACbgB,EAA8BD,EAA9BC,MAAOR,EAAuBO,EAAvBP,KAAMS,EAAiBF,EAAjBE,GAAIR,EAAaM,EAAbN,SACzB,OACER,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAChBH,EAAAC,EAAAC,cAACe,EAAD,CACEnB,QAASU,EACTT,mBAAoB,kBAAMA,EAAmBiB,MAE/ChB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBY,IAElCf,EAAAC,EAAAC,cAACgB,EAAD,CAAWX,KAAMA,EAAMC,SAAUA,MCFxBW,EAVI,SAAAtB,GAAmC,IAAhCuB,EAAgCvB,EAAhCuB,MAAOrB,EAAyBF,EAAzBE,mBACnBsB,EAAeD,EAAME,IAAI,SAAAR,GAC3B,OACId,EAAAC,EAAAC,cAACqB,EAAD,CAAOC,IAAKV,EAAKE,GAAIF,KAAMA,EAAMf,mBAAoBA,MAI7D,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAekB,ICA1BI,EARA,SAAA5B,GAAqC,IAAlC6B,EAAkC7B,EAAlC6B,KAAMC,EAA4B9B,EAA5B8B,sBACpB,OACI3B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiByB,QAASD,GACvCD,ICsEEG,oNAlEbC,MAAQ,CACNV,MAAO,GACPW,SAAS,KAOXC,8BAAW,SAAAC,IAAA,IAAAC,EAAAd,EAAA,OAAAe,EAAAlC,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEWC,IAAMC,IAAI,8CAFrB,OAEDP,EAFCG,EAAAK,KAGDtB,EAAQc,EAAIS,KAAKC,MAAM,EAAG,GAAGtB,IAAI,SAAAuB,GACrC,MAAO,CACL7B,GAF4D6B,EAAtB7B,GAGtCD,MAH4D8B,EAAlB9B,MAI1CR,KAJ4DsC,EAAXtC,KAKjDC,UAAU,KAGdsC,EAAKC,SAAS,CAAE3B,UAXTiB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAcPY,MAAKZ,EAAAW,IAdE,yBAAAX,EAAAa,SAAAjB,EAAA,mBAkBXlC,mBAAqB,SAAAoD,GACnB,IAAM/B,EAAQ0B,EAAKhB,MAAMV,MAAME,IAAI,SAAAR,GACjC,OAAIA,EAAKE,KAAOmC,EACPC,OAAAC,EAAA,EAAAD,CAAA,GACFtC,EADL,CAEEN,UAAWM,EAAKN,WAGXM,IAILwC,EAAkBlC,EAAMmC,KAAK,SAAAzC,GAAI,OAAsB,IAAlBA,EAAKN,WAChDsC,EAAKC,SAAS,CAAE3B,QAAOW,SAAUuB,OAGnC3B,sBAAwB,WACtB,IAAMP,EAAQ0B,EAAKhB,MAAMV,MAAME,IAAI,SAAAR,GAAI,OAAAsC,OAAAC,EAAA,EAAAD,CAAA,GAEhCtC,EAFgC,CAGnCN,UAAWsC,EAAKhB,MAAMC,YAG1Be,EAAKC,SAAS,SAAAS,GAAS,MAAK,CAC1BpC,QACAW,SAAUyB,EAAUzB,+FA9CtB0B,KAAKzB,4CAmDL,OACEhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACE1D,EAAAC,EAAAC,cAACyD,EAAD,CAAQjC,KAAM+B,KAAK3B,MAAMC,QAAW,WAAe,WAAaJ,sBAAuB8B,KAAK9B,wBAC3F8B,KAAK3B,MAAMV,MAAMwC,OAAU5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAYzC,MAAOqC,KAAK3B,MAAMV,MAAOrB,mBAAoB0D,KAAK1D,qBAA2BC,EAAAC,EAAAC,cAAA,iCA7D3G4D,cCJlBC,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b12efd50.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Switch = ({ checked, handleSwitchChange }) => <input className='switch-input' type=\"checkbox\" checked={checked} onChange={() => handleSwitchChange()} />\r\n\r\nexport default Switch;\r\n","import React from 'react';\r\nimport classNames from 'classnames'\r\n\r\nconst PanelBody = ({ body, isOpened }) => {\r\n    const articleClass = classNames({\r\n        'panel__article': true,\r\n        'opened': isOpened\r\n    });\r\n\r\n    return (\r\n        <article className={articleClass}>\r\n            <p className='panel__body'>{body}</p>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default PanelBody;\r\n","import React from \"react\";\r\nimport Switch from \"../components/Switch\";\r\nimport PanelBody from \"./PanelBody\";\r\n\r\nconst Panel = ({ post, handleSwitchChange }) => {\r\n  const { title, body, id, isOpened } = post;\r\n  return (\r\n    <section>\r\n      <header className=\"panel__header\">\r\n        <Switch\r\n          checked={isOpened}\r\n          handleSwitchChange={() => handleSwitchChange(id)}\r\n        />\r\n        <h3 className=\"panel__heading\">{title}</h3>\r\n      </header>\r\n      <PanelBody body={body} isOpened={isOpened} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React from 'react';\r\nimport Panel from '../components/Panel';\r\n\r\nconst PanelsList = ({ posts, handleSwitchChange }) => {\r\n    const renderPanels = posts.map(post => {\r\n        return (\r\n            <Panel key={post.id} post={post} handleSwitchChange={handleSwitchChange} />\r\n        );\r\n    });\r\n\r\n    return <div className=\"panels-list\">{renderPanels}</div>;\r\n}\r\n\r\nexport default PanelsList;","import React from 'react';\r\n\r\nconst Button = ({ text, handleAllPanelsButton }) => {\r\n    return (\r\n        <button className='panels__button' onClick={handleAllPanelsButton}>\r\n            {text}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport PanelsList from './components/PanelsList';\r\nimport Button from './components/Button';\r\n\r\nimport './styles/style.scss'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    posts: [],\r\n    showAll: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPosts()\r\n  }\r\n\r\n  getPosts = async () => {\r\n    try {\r\n      const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n      const posts = res.data.slice(0, 8).map(({ id, title, body }) => {\r\n        return {\r\n          id,\r\n          title,\r\n          body,\r\n          isOpened: false\r\n        }\r\n      })\r\n      this.setState({ posts })\r\n    }\r\n    catch (err) {\r\n      alert(err)\r\n    }\r\n  }\r\n\r\n  handleSwitchChange = panelId => {\r\n    const posts = this.state.posts.map(post => {\r\n      if (post.id === panelId) {\r\n        return {\r\n          ...post,\r\n          isOpened: !post.isOpened\r\n        }\r\n      } else {\r\n        return post\r\n      }\r\n    })\r\n    //CHECK IF ALL INPUTS ARE OPENED TO CHANGE SHOWALL BUTTON CONTENT\r\n    const uncheckedInputs = posts.find(post => post.isOpened === false)\r\n    this.setState({ posts, showAll: !uncheckedInputs })\r\n  }\r\n\r\n  handleAllPanelsButton = () => {\r\n    const posts = this.state.posts.map(post => (\r\n      {\r\n        ...post,\r\n        isOpened: !this.state.showAll\r\n      }\r\n    ))\r\n    this.setState(prevState => ({\r\n      posts,\r\n      showAll: !prevState.showAll\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button text={this.state.showAll ? ('Hide all') : ('Show all')} handleAllPanelsButton={this.handleAllPanelsButton} />\r\n        {this.state.posts.length ? (<PanelsList posts={this.state.posts} handleSwitchChange={this.handleSwitchChange} />) : (<div>Loading...</div>)}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}