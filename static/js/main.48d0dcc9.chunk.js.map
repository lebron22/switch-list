{"version":3,"sources":["components/Switch.js","components/PanelBody.js","components/Panel.js","components/PanelsList.js","components/Button.js","components/Pagination.js","components/PostsPerPageSelect.js","components/ViewTools.js","App.js","index.js"],"names":["Switch","_ref","checked","handleSwitchChange","react_default","a","createElement","className","type","onChange","PanelBody","body","isOpened","articleClass","classNames","panel__article","opened","Panel","post","title","id","components_Switch","components_PanelBody","PanelsList","posts","renderPanels","map","components_Panel","key","Button","text","handleAllPanelsButton","onClick","Pagination","currentPage","setCurrentPage","postsPerPage","totalPosts","pageNumbers","i","Math","ceil","push","renderPageNumbers","number","buttonClassName","PostsPerPageSelect","setNumberOfPostsPerPage","htmlFor","e","target","value","ViewTools","children","App","state","showAll","getPosts","_callee","res","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","slice","_ref2","_this","setState","t0","alert","stop","panelId","Object","objectSpread","uncheckedInputs","find","prevState","pageNumber","_this$state","length","this","_this$state2","indexOfLastPost","indexOfFirstPost","postsToShow","Fragment","components_ViewTools","components_Button","components_PostsPerPageSelect","components_PanelsList","components_Pagination","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.48d0dcc9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Switch = ({ checked, handleSwitchChange }) => <input className='switch-input' type=\"checkbox\" checked={checked} onChange={() => handleSwitchChange()} />\r\n\r\nexport default Switch;\r\n","import React from 'react';\r\nimport classNames from 'classnames'\r\n\r\nconst PanelBody = ({ body, isOpened }) => {\r\n    const articleClass = classNames({\r\n        'panel__article': true,\r\n        'opened': isOpened\r\n    });\r\n\r\n    return (\r\n        <article className={articleClass}>\r\n            <p className='panel__body'>{body}</p>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default PanelBody;\r\n","import React from \"react\";\r\nimport Switch from \"../components/Switch\";\r\nimport PanelBody from \"./PanelBody\";\r\n\r\nconst Panel = ({ post, handleSwitchChange }) => {\r\n  const { title, body, id, isOpened } = post;\r\n  return (\r\n    <section>\r\n      <header className=\"panel__header\">\r\n        <Switch\r\n          checked={isOpened}\r\n          handleSwitchChange={() => handleSwitchChange(id)}\r\n        />\r\n        <h3 className=\"panel__heading\">{title}</h3>\r\n      </header>\r\n      <PanelBody body={body} isOpened={isOpened} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React from \"react\";\r\nimport Panel from \"../components/Panel\";\r\n\r\nconst PanelsList = ({ posts, handleSwitchChange }) => {\r\n  const renderPanels = posts.map(post => {\r\n    return (\r\n      <Panel\r\n        key={post.id}\r\n        post={post}\r\n        handleSwitchChange={handleSwitchChange}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"panels-list\">{renderPanels}</div>;\r\n};\r\n\r\nexport default PanelsList;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ text, handleAllPanelsButton }) => {\r\n  return (\r\n    <button className=\"button-primary\" onClick={handleAllPanelsButton}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  setCurrentPage,\r\n  postsPerPage,\r\n  totalPosts\r\n}) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const renderPageNumbers = pageNumbers.map(number => {\r\n    const buttonClassName =\r\n      number === currentPage ? \"button-primary active\" : \"button-primary\";\r\n    return (\r\n      <li className=\"pagination__item\" key={number}>\r\n        <button\r\n          className={buttonClassName}\r\n          onClick={() => setCurrentPage(number)}\r\n        >\r\n          {number}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"pagination\">{renderPageNumbers}</ul>;\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst PostsPerPageSelect = ({ setNumberOfPostsPerPage }) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"posts-select\">Posts per page: </label>\r\n      <select\r\n        className=\"select\"\r\n        id=\"posts-select\"\r\n        onChange={e => setNumberOfPostsPerPage(e.target.value)}\r\n      >\r\n        <option className=\"select__option\" value=\"5\">\r\n          5\r\n        </option>\r\n        <option className=\"select__option\" value=\"8\">\r\n          8\r\n        </option>\r\n        <option className=\"select__option\" value=\"10\">\r\n          10\r\n        </option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsPerPageSelect;\r\n","import React from \"react\";\r\n\r\nconst ViewTools = ({ children }) => {\r\n  return <div className=\"view-tools\">{children}</div>;\r\n};\r\n\r\nexport default ViewTools;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport PanelsList from \"./components/PanelsList\";\r\nimport Button from \"./components/Button\";\r\nimport Pagination from \"./components/Pagination\";\r\nimport PostsPerPageSelect from \"./components/PostsPerPageSelect\";\r\n\r\nimport \"./styles/style.scss\";\r\nimport ViewTools from \"./components/ViewTools\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    posts: [],\r\n    currentPage: 1,\r\n    postsPerPage: 5,\r\n    showAll: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getPosts();\r\n  }\r\n\r\n  getPosts = async () => {\r\n    try {\r\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\r\n      const posts = res.data.slice(0, 25).map(({ id, title, body }) => {\r\n        return {\r\n          id,\r\n          title,\r\n          body,\r\n          isOpened: false\r\n        };\r\n      });\r\n      this.setState({ posts });\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  handleSwitchChange = panelId => {\r\n    const posts = this.state.posts.map(post => {\r\n      if (post.id === panelId) {\r\n        return {\r\n          ...post,\r\n          isOpened: !post.isOpened\r\n        };\r\n      } else {\r\n        return post;\r\n      }\r\n    });\r\n    //CHECK IF ALL INPUTS ARE OPENED TO CHANGE SHOWALL BUTTON CONTENT\r\n    const uncheckedInputs = posts.find(post => post.isOpened === false);\r\n    this.setState({ posts, showAll: !uncheckedInputs });\r\n  };\r\n\r\n  handleAllPanelsButton = () => {\r\n    const posts = this.state.posts.map(post => ({\r\n      ...post,\r\n      isOpened: !this.state.showAll\r\n    }));\r\n    this.setState(prevState => ({\r\n      posts,\r\n      showAll: !prevState.showAll\r\n    }));\r\n  };\r\n\r\n  setCurrentPage = pageNumber => {\r\n    this.setState({ currentPage: pageNumber });\r\n  };\r\n\r\n  setNumberOfPostsPerPage = number => {\r\n    const { posts, currentPage } = this.state;\r\n    //Check if currentPage would not be empty\r\n    if (currentPage * number > posts.length) {\r\n      this.setState({\r\n        postsPerPage: number,\r\n        currentPage: Math.ceil(posts.length / number)\r\n      });\r\n    } else {\r\n      this.setState({ postsPerPage: number });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { showAll, posts, currentPage, postsPerPage } = this.state;\r\n\r\n    //Pagination variables\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const postsToShow = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    return (\r\n      <>\r\n        <ViewTools>\r\n          <Button\r\n            text={showAll ? \"Collapse all\" : \"Expand all\"}\r\n            handleAllPanelsButton={this.handleAllPanelsButton}\r\n          />\r\n          <PostsPerPageSelect\r\n            setNumberOfPostsPerPage={this.setNumberOfPostsPerPage}\r\n          />\r\n        </ViewTools>\r\n\r\n        {posts.length ? (\r\n          <>\r\n            <PanelsList\r\n              posts={postsToShow}\r\n              handleSwitchChange={this.handleSwitchChange}\r\n            />\r\n            <Pagination\r\n              currentPage={currentPage}\r\n              postsPerPage={postsPerPage}\r\n              totalPosts={posts.length}\r\n              setCurrentPage={this.setCurrentPage}\r\n            />\r\n          </>\r\n        ) : (\r\n          <div>Loading...</div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}