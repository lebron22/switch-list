{"version":3,"sources":["components/Switch.js","components/Panel.js","components/PanelsList.js","App.js","index.js"],"names":["Switch","_ref","checked","handleCheckboxChange","react_default","a","createElement","className","type","onChange","Panel","post","title","body","id","isOpened","components_Switch","PanelsList","posts","panels","map","components_Panel","key","App","state","showAll","panelId","_this","undefined","find","setState","handleAllPanels","_ref2","prevState","_this2","this","axios","get","then","res","data","slice","_ref3","catch","err","alert","Fragment","onClick","length","components_PanelsList","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+QAKeA,SAFA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,qBAAZ,OAAuCC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeC,KAAK,WAAWN,QAASA,EAASO,SAAU,kBAAMN,SCmBzHO,SAlBD,SAAAT,GAAoC,IAAjCU,EAAiCV,EAAjCU,KAAMR,EAA2BF,EAA3BE,qBACXS,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,GAAIC,EAAaJ,EAAbI,SACzB,OACIX,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBACdH,EAAAC,EAAAC,cAACU,EAAD,CAAQd,QAASa,EAAUZ,qBAAsB,kBAAMA,EAAqBW,MAC5EV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBK,IAGnCG,EACGX,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,SAAIO,IAER,QCLDI,EATI,SAAAhB,GAAqC,IAAlCiB,EAAkCjB,EAAlCiB,MAAOf,EAA2BF,EAA3BE,qBACnBgB,EAASD,EAAME,IAAI,SAAAT,GACrB,OACIP,EAAAC,EAAAC,cAACe,EAAD,CAAOC,IAAKX,EAAKG,GAAIH,KAAMA,EAAMR,qBAAsBA,MAG/D,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeY,qBCuE1BI,oNAzEbC,MAAQ,CACNN,MAAO,GACPO,SAAS,KAmBXtB,qBAAuB,SAAAuB,GACrB,IAAMR,EAAQS,EAAKH,MAAMN,MAAME,IAAI,SAAAnB,GAAmC,IAAhCa,EAAgCb,EAAhCa,GAAIF,EAA4BX,EAA5BW,MAAOC,EAAqBZ,EAArBY,KAAME,EAAed,EAAfc,SAIrD,OAHID,IAAOY,IACTX,GAAYA,GAEP,CACLD,KACAF,QACAC,OACAE,cAKEU,OAA8BG,IADZV,EAAMW,KAAK,SAAAlB,GAAI,OAAsB,IAAlBA,EAAKI,WAGhDY,EAAKG,SAAS,CAAEZ,QAAOO,eAGzBM,gBAAkB,WAChB,IAAMb,EAAQS,EAAKH,MAAMN,MAAME,IAAI,SAAAY,GAAmC,IAAhClB,EAAgCkB,EAAhClB,GAAIF,EAA4BoB,EAA5BpB,MAAOC,EAAqBmB,EAArBnB,KAAqBmB,EAAfjB,SAErD,MAAO,CACLD,KACAF,QACAC,OACAE,UALUY,EAAKH,MAAMC,WAQzBE,EAAKG,SAAS,SAAAG,GAAS,MAAK,CAC1Bf,QACAO,SAAUQ,EAAUR,+FA/CJ,IAAAS,EAAAC,KAClBC,IAAMC,IAAI,8CACPC,KAAK,SAAAC,GACJ,IAAMrB,EAAQqB,EAAIC,KAAKC,MAAM,EAAG,GAAGrB,IAAI,SAAAsB,GACrC,MAAO,CACL5B,GAF4D4B,EAAtB5B,GAGtCF,MAH4D8B,EAAlB9B,MAI1CC,KAJ4D6B,EAAX7B,KAKjDE,UAAU,KAGdmB,EAAKJ,SAAS,CAAEZ,YAEjByB,MAAM,SAAAC,GAAG,OAAIC,MAAMD,sCAuCtB,OACExC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACE1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBwC,QAASZ,KAAKJ,iBAC9CI,KAAKX,MAAMC,QAAW,WAAe,YAEvCU,KAAKX,MAAMN,MAAM8B,OAChB5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAY/B,MAAOiB,KAAKX,MAAMN,MAAOf,qBAAsBgC,KAAKhC,uBAE9DC,EAAAC,EAAAC,cAAA,iCAlEM4C,cCFlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5d2f8e39.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/switch.scss'\r\n\r\nconst Switch = ({ checked, handleCheckboxChange }) => <input className='switch-input' type=\"checkbox\" checked={checked} onChange={() => handleCheckboxChange()} />\r\n\r\nexport default Switch;\r\n","import React from 'react';\r\nimport Switch from '../components/Switch';\r\nimport '../styles/panel.scss';\r\n\r\nconst Panel = ({ post, handleCheckboxChange }) => {\r\n    const { title, body, id, isOpened } = post\r\n    return (\r\n        <section>\r\n            <header className='panel__header'>\r\n                <Switch checked={isOpened} handleCheckboxChange={() => handleCheckboxChange(id)} />\r\n                <h3 className='panel__heading'>{title}</h3>\r\n            </header >\r\n\r\n            {isOpened ? (\r\n                <article className='panel__article'>\r\n                    <p>{body}</p>\r\n                </article>\r\n            ) : null}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Panel;","import React from 'react';\r\nimport Panel from '../components/Panel';\r\n\r\nconst PanelsList = ({ posts, handleCheckboxChange }) => {\r\n    const panels = posts.map(post => {\r\n        return (\r\n            <Panel key={post.id} post={post} handleCheckboxChange={handleCheckboxChange} />\r\n        );\r\n    });\r\n    return <div className=\"panels-list\">{panels}</div>;\r\n}\r\n\r\nexport default PanelsList;","import React, { Component } from 'react';\r\nimport PanelsList from './components/PanelsList';\r\nimport axios from 'axios'\r\n\r\nimport './styles/app.scss'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    posts: [],\r\n    showAll: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/posts')\r\n      .then(res => {\r\n        const posts = res.data.slice(0, 3).map(({ id, title, body }) => {\r\n          return {\r\n            id,\r\n            title,\r\n            body,\r\n            isOpened: false\r\n          }\r\n        })\r\n        this.setState({ posts })\r\n      })\r\n      .catch(err => alert(err))\r\n  }\r\n\r\n  handleCheckboxChange = panelId => {\r\n    const posts = this.state.posts.map(({ id, title, body, isOpened }) => {\r\n      if (id === panelId) {\r\n        isOpened = !isOpened\r\n      }\r\n      return {\r\n        id,\r\n        title,\r\n        body,\r\n        isOpened\r\n      }\r\n    })\r\n    //CHECK IF ALL INPUTS ARE OPENED TO CHANGE SHOWALL BUTTON CONTENT\r\n    const uncheckedInputs = posts.find(post => post.isOpened === false)\r\n    const showAll = uncheckedInputs !== undefined ? false : true\r\n    //\r\n    this.setState({ posts, showAll })\r\n  }\r\n\r\n  handleAllPanels = () => {\r\n    const posts = this.state.posts.map(({ id, title, body, isOpened }) => {\r\n      isOpened = !this.state.showAll\r\n      return {\r\n        id,\r\n        title,\r\n        body,\r\n        isOpened\r\n      }\r\n    })\r\n    this.setState(prevState => ({\r\n      posts,\r\n      showAll: !prevState.showAll\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button className='panels__button' onClick={this.handleAllPanels}>\r\n          {this.state.showAll ? ('Hide all') : ('Show all')}\r\n        </button>\r\n        {this.state.posts.length ? (\r\n          <PanelsList posts={this.state.posts} handleCheckboxChange={this.handleCheckboxChange} />\r\n        ) : (\r\n            <div>Loading...</div>\r\n          )}\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}